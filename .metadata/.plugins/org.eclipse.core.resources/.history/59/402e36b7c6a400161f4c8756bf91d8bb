package activity;

import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.List;

import com.hero.app.R;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import db.HeroDB;
import db.User;
import receiver.NetworkReceiver;
import util.ActivityControl;
import util.AnalyzeData;
import util.BaseActivity;
import util.HttpCallBackListener;
import util.HttpUtil;
import util.Music;

public class LogIn extends BaseActivity{
	
	private EditText usernameEditText;
	private EditText passwordEditText;
	private Button loginButton; 
	private Button backButton;
	private TextView resultTextView;
	private  String username;
	private String password;
	static public String logInUsername;
	List <User> userList = new ArrayList<User>();
	private User user;
	
	public void onCreate(Bundle savedInstanceState){
		
		super.onCreate(savedInstanceState);
        setContentView(R.layout.login);
        
        
        usernameEditText = (EditText)findViewById(R.id.edittext_loginname);
        passwordEditText = (EditText)findViewById(R.id.edittext_loginpassword);
        loginButton = (Button)findViewById(R.id.button_login);
        backButton = (Button)findViewById(R.id.button_loginback);

        
        
        //用户名输入框
        usernameEditText.addTextChangedListener(new TextWatcher(){

			@Override
			public void beforeTextChanged(CharSequence s, int start, int count, int after) {
				// TODO Auto-generated method stub				
			}
			@Override
			public void onTextChanged(CharSequence s, int start, int before, int count) {
				// TODO Auto-generated method stub				
			}
			
			@Override
			public void afterTextChanged(Editable s) {
				if(s.toString().equals("")){
					loginButton.setEnabled(false);
					loginButton.setBackgroundColor(android.graphics.Color.parseColor("#D8BFD8"));
				}else{
					loginButton.setEnabled(true);
					loginButton.setBackgroundColor(android.graphics.Color.parseColor("#70f3ff"));
					
				}
			}
        	
        });
        
        
        //密码输入框
        passwordEditText.addTextChangedListener(new TextWatcher(){

			@Override
			public void beforeTextChanged(CharSequence s, int start, int count, int after) {
				// TODO Auto-generated method stub				
			}
			@Override
			public void onTextChanged(CharSequence s, int start, int before, int count) {
				// TODO Auto-generated method stub				
			}
			
			@Override
			public void afterTextChanged(Editable s) {
				if(s.toString().equals("")){
					loginButton.setEnabled(false);
					loginButton.setBackgroundColor(android.graphics.Color.parseColor("#D8BFD8"));
				}else{
					loginButton.setEnabled(true);
					loginButton.setBackgroundColor(android.graphics.Color.parseColor("#70f3ff"));
				}
			}
        	
        });
        
        
        //定义返回键
        backButton.setOnClickListener(new OnClickListener(){
			@Override
			public void onClick(View arg0) {
				Intent intent = new Intent(LogIn.this, Main.class);
				startActivity(intent);
			}      	
        });
        

        loginButton.setOnClickListener(new OnClickListener(){
			@Override
			public void onClick(View arg0) {
				
                //有网络的情况允许登录，无网络状况回到主界面
				Intent intent = new Intent("com.hero.app.receiver.checknetwork");
				intent.putExtra("key", "registerbutton");
				sendBroadcast(intent);
				
				username = usernameEditText.getText().toString();
				password = passwordEditText.getText().toString();
				
				
				User user = new User(username, password, "");
				
				if (userName.length() > 0 && userName.length() <= 10  && userPassword.length() > 0 && userPassword.length() <= 10){				
					
					//URL能够检测传递的用户名与密码是否匹配，如果都匹配，则返回登录成功，如果不匹配，返回登录失败
					HttpUtil.sendHttpPostRequest("http://172.18.3.190:8081/smtest/index.php", user, new HttpCallBackListener(){
						
					}
				}
			}
        });

						

						
						
						
						

}
